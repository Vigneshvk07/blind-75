#include <stdio.h>
#include <limits.h> 

int maxSubArray(int* nums, int numsSize) {
    int max_current = nums[0];
    int max_global = nums[0];
    for (int i = 1; i < numsSize; i++) {
        max_current = (nums[i] > max_current + nums[i]) ? nums[i] : (max_current + nums[i]);
        if (max_current > max_global) {
            max_global = max_current;
        }
    }
    
    return max_global;
}

int main() {
    int nums1[] = {-2, 1, -3, 4, -1, 2, 1, -5, 4};
    int numsSize1 = sizeof(nums1) / sizeof(nums1[0]);
    
    int nums2[] = {1};
    int numsSize2 = sizeof(nums2) / sizeof(nums2[0]);
    
    int nums3[] = {5, 4, -1, 7, 8};
    int numsSize3 = sizeof(nums3) / sizeof(nums3[0]);
    
    printf("Output 1: %d\n", maxSubArray(nums1, numsSize1)); 
    printf("Output 2: %d\n", maxSubArray(nums2, numsSize2)); 
    printf("Output 3: %d\n", maxSubArray(nums3, numsSize3));
    
    return 0;
}
