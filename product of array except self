#include <stdio.h>
#include <stdlib.h>
void productExceptSelf(int* nums, int numsSize, int* answer) {
    int* left_products = (int*)malloc(numsSize * sizeof(int));
    int* right_products = (int*)malloc(numsSize * sizeof(int));
    left_products[0] = 1;
    for (int i = 1; i < numsSize; i++) {
        left_products[i] = left_products[i - 1] * nums[i - 1];
    }
   
    right_products[numsSize - 1] = 1;
    for (int i = numsSize - 2; i >= 0; i--) {
        right_products[i] = right_products[i + 1] * nums[i + 1];
    }
 for (int i = 0; i < numsSize; i++) {
        answer[i] = left_products[i] * right_products[i];
    }
 free(left_products);
    free(right_products);
}

int main() {
    int nums[] = {1, 2, 3, 4}; // Example input
    int numsSize = sizeof(nums) / sizeof(nums[0]);
    int* answer = (int*)malloc(numsSize * sizeof(int));
    productExceptSelf(nums, numsSize, answer);
    printf("Output: [");
    for (int i = 0; i < numsSize; i++) {
        printf("%d", answer[i]);
        if (i < numsSize - 1) {
            printf(", ");
        }
    }
    printf("]\n");
free(answer);
return 0;
}
